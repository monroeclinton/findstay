// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "postgresql"
    // NOTE: When using postgresql, mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model AirbnbLocation {
    id        String             @id @default(cuid())
    syncId    String
    sync      AirbnbLocationSync @relation(fields: [syncId], references: [id], onDelete: Cascade)
    airbnbId  String
    name      String
    rating    String
    latitude  Decimal
    longitude Decimal
    createdAt DateTime           @default(now())
    updatedAt DateTime           @updatedAt

    @@map("airbnb_location")
    @@unique([syncId, airbnbId])
}

model AirbnbLocationSync {
    id        String                               @id @default(cuid())
    search    String
    apiKey    String
    page      Int
    cursors   String[]
    neBBox    Unsupported("geometry(Point, 4326)")
    swBBox    Unsupported("geometry(Point, 4326)")
    locations AirbnbLocation[]
    createdAt DateTime                             @default(now())
    updatedAt DateTime                             @updatedAt

    @@map("airbnb_location_sync")
    @@index([neBBox], type: Gist)
    @@index([swBBox], type: Gist)
}

model GoogleMapsLocation {
    id         String                               @id @default(cuid())
    syncId     String
    sync       GoogleMapsSync                       @relation(fields: [syncId], references: [id], onDelete: Cascade)
    name       String
    type       String
    reviews    Int
    stars      Decimal
    hex        String                               @unique
    uri        String
    link       String
    coordinate Unsupported("geometry(Point, 4326)")
    latitude   Decimal
    longitude  Decimal
    createdAt  DateTime                             @default(now())
    updatedAt  DateTime                             @updatedAt

    @@map("google_maps_location")
}

model GoogleMapsSync {
    id         String   @id @default(cuid())
    search     String
    coordinate Unsupported("geometry(Point, 4326)")
    latitude   Decimal
    longitude  Decimal
    locations  GoogleMapsLocation[]
    createdAt  DateTime @default(now())
    updatedAt  DateTime @updatedAt

    @@map("google_maps_sync")
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String?
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@map("account")
    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@map("session")
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]

    @@map("user")
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@map("verification_token")
    @@unique([identifier, token])
}
